//import org.apache.tools.ant.taskdefs.condition.Os
apply plugin: 'com.android.library'

android {
    compileSdkVersion 19
    buildToolsVersion '25.0.3'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 122
        versionName "1.2.2"

        ndk { // 设置支持的SO库架构
            abiFilters 'armeabi'
        }
        /*
        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    //path "./Android.mk"
                    targets 'libZDSDK'
                    arguments 'NDK_TOOLCHAIN_VERSION=4.9'
                    arguments 'APP_PLATFORM=android-'+PROP_TARGET_SDK_VERSION

                    def module_paths = [project.file("../../../libsrc").absolutePath]
                    if (false) { //(Os.isFamily(Os.FAMILY_WINDOWS))
                        module_paths = module_paths.collect {it.replaceAll('\\\\', '/')}
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    }
                    else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }

                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect{it as String})
                }
            }
        }
        */
    }

    sourceSets.main {
        aidl.srcDir "../java"
        java.srcDir "../java"
        manifest.srcFile "AndroidManifest.xml"
    }

    /*
    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "Android.mk"
            }
        }
    }
    */

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: '../java/libs')
}
